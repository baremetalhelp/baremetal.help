"use strict";(self.webpackChunkdocs_new=self.webpackChunkdocs_new||[]).push([[7679],{4874:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var i=s(4848),t=s(8453);const o={sidebar_position:3},a="SSO Landing Zone",r={id:"enterprise/landing-zone/index",title:"SSO Landing Zone",description:"- [ ] The preamble is too wordy and not very good.",source:"@site/docs/enterprise/landing-zone/index.md",sourceDirName:"enterprise/landing-zone",slug:"/enterprise/landing-zone/",permalink:"/docs/enterprise/landing-zone/",draft:!1,unlisted:!1,editUrl:"https://github.com/baremetalhelp/baremetal.help/docs/enterprise/landing-zone/index.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Set Up User and Group Provisioning",permalink:"/docs/enterprise/sso/enable-provisionsing"},next:{title:"Coming Soon",permalink:"/docs/category/coming-soon"}},c={},d=[{value:"Assumptions",id:"assumptions",level:2},{value:"Preparation",id:"preparation",level:2},{value:"Update SSO configuration",id:"update-sso-configuration",level:3},{value:"Get the list of AWS Accounts",id:"get-the-list-of-aws-accounts",level:3},{value:"Get the list of SSO Group IDs",id:"get-the-list-of-sso-group-ids",level:3},{value:"Configure permissions",id:"configure-permissions",level:3},{value:"Now Glue Everything Together",id:"now-glue-everything-together",level:2},{value:"Deploy the SSO Stack",id:"deploy-the-sso-stack",level:2},{value:"Looks good: deploy!",id:"looks-good-deploy",level:3},{value:"Do We Have a Landing Zone?",id:"do-we-have-a-landing-zone",level:2},{value:"Try signing in",id:"try-signing-in",level:3},{value:"Using the Landing Zone",id:"using-the-landing-zone",level:2},{value:"Using Roles and Permissions",id:"using-roles-and-permissions",level:2},{value:"The Upshot",id:"the-upshot",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",hr:"hr",img:"img",input:"input",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"sso-landing-zone",children:"SSO Landing Zone"}),"\n",(0,i.jsx)(n.admonition,{title:"This page has multiple issues.",type:"warning",children:(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","The preamble is too wordy and not very good."]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","It does not describe the what the landing zone is and how to make it very well."]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","There's no help for resolving common issues."]}),"\n"]})}),"\n",(0,i.jsx)(n.p,{children:"Single Sign-On provides a way to associate users and groups in the enterprise. Usually, this delegates to something like Active Directory."}),"\n",(0,i.jsxs)(n.p,{children:["But there's another piece that must be implemented that lets users see accounts and permissions for groups they're in once they sign on. This is done with ",(0,i.jsx)(n.a,{href:"https://docs.aws.amazon.com/singlesignon/latest/userguide/permissionsetsconcept.html",children:"AWS Permission Sets"}),". That's what you're going to do now."]}),"\n",(0,i.jsx)(n.p,{children:"Unless you do this bit, users will be able to log in using SSO just fine, but they won't see any available accounts when they do."}),"\n",(0,i.jsx)(n.p,{children:"Here's how the different entities are related. Looks complicated, but follow it through anyway. \u2705 resources are done. \ud83d\udee0 is what you're making."}),"\n",(0,i.jsx)(n.mermaid,{value:'stateDiagram-v2\n   state "\u2705 AWS Organization" as organization\n   state "\u2705 SSO Identity Provider" as directory\n   state "\u2705 SSO Groups" as groups\n   state "\u2705 SSO Users" as users\n   state "\u2705 AWS Accounts" as accounts\n   state "\ud83d\udee0 AWS Permission Sets" as permission_sets\n   state "\ud83d\udee0 Permission Set Assignments" as permission_set_assignments\n   state "\ud83d\udee0 AWS Landing Zone" as landing_zone\n   organization --\x3e accounts : contains\n   directory --\x3e users : provides\n   directory --\x3e groups : provides\n   permission_sets --\x3e permission_set_assignments : binds to\n   accounts --\x3e permission_set_assignments : binds to\n   groups --\x3e permission_set_assignments : binds to\n   permission_set_assignments --\x3e landing_zone : configures\n   users --\x3e landing_zone : log in via SSO'}),"\n",(0,i.jsx)(n.h2,{id:"assumptions",children:"Assumptions"}),"\n",(0,i.jsx)(n.p,{children:'See the general assumptions in "About BareMetal tutorials".'}),"\n",(0,i.jsx)(n.p,{children:"In addition"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["You have set up a ",(0,i.jsx)(n.a,{href:"../enterprise/organization",children:"BareMetal AWS Organization"})]}),"\n",(0,i.jsx)(n.li,{children:"You have created some accounts in the organization"}),"\n",(0,i.jsxs)(n.li,{children:["You have SSO integration ready because you ",(0,i.jsx)(n.a,{href:"../enterprise/sso/follow-instructions",children:"followed the instructions"})," or ",(0,i.jsx)(n.a,{href:"../enterprise/sso/sso-picture-book",children:"looked at the pictures"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"preparation",children:"Preparation"}),"\n",(0,i.jsx)(n.p,{children:"The CDK stack for the Landing Zone is data-driven. This means we made it easy for you create assignments of SSO groups to accounts. SSO users in those groups will see accounts assigned to the groups they're in when they log in. This is the Landing Zone."}),"\n",(0,i.jsx)(n.p,{children:"You're going to collect ids for AWS Accounts and SSO Groups an add those to a data structure. The CDK stack will traverse this data structure and create the corresponding AWS resources for the Landing Zone. We do the loops and create the resources so you don't have to."}),"\n",(0,i.jsx)(n.p,{children:"A big advantage of making this part data driven is that since we're using TypeScript, we can make the data type safe so you don't mess it up. And you don't have to worry about all the plumbing. All you need to do it gather the rights ids."}),"\n",(0,i.jsxs)(n.p,{children:["The configuration file ig ",(0,i.jsx)(n.code,{children:"landing-zone-config.ts"})," [link]."]}),"\n",(0,i.jsx)(n.p,{children:"In summary, you'll"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Make a list of AWS Accounts"}),"\n",(0,i.jsx)(n.li,{children:"Make a list of SSO Groups"}),"\n",(0,i.jsx)(n.li,{children:"Define AWS Permission Sets that grant SSO Users in SSO Groups permissions in AWS Accounts"}),"\n",(0,i.jsx)(n.li,{children:'Press the "go" button'}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"update-sso-configuration",children:"Update SSO configuration"}),"\n",(0,i.jsxs)(n.admonition,{title:"action",type:"info",children:[(0,i.jsx)(n.p,{children:"Open the AWS SSO Console."}),(0,i.jsx)(n.p,{children:'Click "Settings".'}),(0,i.jsx)(n.p,{children:"Copy the value of the SSO ARN."})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(2860).A+"",width:"2908",height:"2856"})}),"\n",(0,i.jsx)(n.p,{children:"This ARN is used to create the required SSO resources Permissions Sets and Account/Group assignments."}),"\n",(0,i.jsx)(n.admonition,{title:"action",type:"info",children:(0,i.jsxs)(n.p,{children:["In the file ",(0,i.jsx)(n.code,{children:"common-config.ts"}),", set the field ",(0,i.jsx)(n.code,{children:"ssoInstanceArn"})," to the ARN you just copied. Save."]})}),"\n",(0,i.jsx)(n.h3,{id:"get-the-list-of-aws-accounts",children:"Get the list of AWS Accounts"}),"\n",(0,i.jsx)(n.p,{children:"Open the AWS console to the AWS Organizations page. Open up the tree of Organization Units. Any accounts present in the Organization will appear here. For example"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"AWS Organizations console",src:s(6752).A+"",width:"3256",height:"2826"})}),"\n",(0,i.jsx)(n.p,{children:"shows account names and numbers."}),"\n",(0,i.jsxs)(n.p,{children:["For each AWS account you want to include in the Landing Zone, add a value to the ",(0,i.jsx)(n.code,{children:"enum Account"})," like this."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'export enum Account {\n    BILLING_ACCOUNT = "825617765789",\n    SANDBOX = "772866064453",\n    PREPROD1 = "921112571860",\n    PROD1 = "644590569382",\n    AUDIT = "405828339838",\n    LOG_ARCHIVE = "937567863100",\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["An ",(0,i.jsx)(n.code,{children:"enum"})," is better than constants because we can use them in type-safe data structures,\nwhereas simple constants could be misspelled. Remember these are strings.[^1]"]}),"\n",(0,i.jsx)(n.h3,{id:"get-the-list-of-sso-group-ids",children:"Get the list of SSO Group IDs"}),"\n",(0,i.jsxs)(n.p,{children:["Open the AWS SSO Console. Click ",(0,i.jsx)(n.em,{children:"Groups"}),". Click a group you want to available in the Landing Zone. Copy the ",(0,i.jsx)(n.em,{children:"Group ID"}),". These ids are GUIDs with a prefix."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"SSO Groups console",src:s(8431).A+"",width:"3256",height:"2826"})}),"\n",(0,i.jsxs)(n.p,{children:["Now update the ",(0,i.jsx)(n.code,{children:"enum"})," for SSO Groups, just like you did for AWS Accounts."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'export enum Group {\n    SRE = "9067420728-45df392d-85da-4751-9f20-47fb268d3709",\n    VIEW_ONLY = "9067420728-101bc3b4-7cbc-4b31-9bfe-4a50632d72b8",\n    READ_ONLY = "9067420728-b8b4d794-4d00-4b87-a1b2-7c58ca76c3a2",\n    DEVELOPER = "9067420728-e78cfac1-937f-459a-98f7-1a4fe90b5772",\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"configure-permissions",children:"Configure permissions"}),"\n",(0,i.jsx)(n.p,{children:"Each SSO Group can be assigned to multiple AWS Accounts. And for each assignment, you need to specify the permissions an SSO User in that SSO Group will have in each account."}),"\n",(0,i.jsx)(n.p,{children:"There's a data structure."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"export interface PermissionSetConfig {\n    // This must be unique and is mandatory\n    //\n    name: string;\n\n    // Optional list of the name (not ARNs) of the AWS Managed Policies this Permission Set uses\n    //\n    awsManagedPolicyNames?: string[];\n    \n    // Option custom policies\n    //\n    inlinePolicyStatements?: PolicyStatement[];\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Here's the ",(0,i.jsx)(n.code,{children:"SRE"})," Permission Set config, defined in ",(0,i.jsx)(n.code,{children:"permission-sets.ts"})," [link]"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'export const adminPermissionSetConfig: PermissionSetConfig = {\n    name: "SRE",\n    awsManagedPolicyNames: [ManagedPolicies.ADMINISTRATOR_ACCESS],\n};\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"name"})," has to be unique. We're using upper case but that's just a habit."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"awsManagedPolicyNames"})," is an array of ",(0,i.jsx)(n.code,{children:"string"}),"s that correspond to AWS-provided policies. We're using the JavaScript library ",(0,i.jsx)(n.code,{children:"cdk-constants"}),", which makes it easy not to mess up spelling."]}),"\n",(0,i.jsxs)(n.p,{children:["In the above, the ",(0,i.jsx)(n.code,{children:"inlinePolicy"})," was omitted. We'll make a Permission Set in a bit that has an inline policy so you can see what that's about."]}),"\n",(0,i.jsx)(n.p,{children:"Define as many of these as you have roles, job functions, or however else you plan to administer and control access."}),"\n",(0,i.jsx)(n.h2,{id:"now-glue-everything-together",children:"Now Glue Everything Together"}),"\n",(0,i.jsxs)(n.p,{children:["In the file ",(0,i.jsx)(n.code,{children:"landing-zone-config.ts"}),", see the interface ",(0,i.jsx)(n.code,{children:"GroupAssignment"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"interface GroupAssignment {\n    group: Group;\n    accounts: Account[];\n    permissionSetConfig: PermissionSetConfig;\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"We define data in this structure that binds everything together."}),"\n",(0,i.jsxs)(n.p,{children:["Add elements to the ",(0,i.jsx)(n.code,{children:"landingZoneConfig"})," like this"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"export const landingZoneConfig: GroupAssignment[] = [\n    // SRE\n    //\n    {\n        group: Group.SRE,\n        accounts: [\n            Account.BILLING_ACCOUNT,\n            Account.SANDBOX,\n            Account.PREPROD1,\n            Account.PROD1,\n            Account.AUDIT,\n            Account.LOG_ARCHIVE,\n        ],\n        permissionSetConfig: adminPermissionSetConfig,\n    },\n    ...\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Here, ",(0,i.jsx)(n.code,{children:"group"})," is a value from your ",(0,i.jsx)(n.code,{children:"enum"})," for SSO Groups. ",(0,i.jsx)(n.code,{children:"accounts"})," is an array that defines which AWS Accounts in the Landing Zone will be available for this SSO Group."]}),"\n",(0,i.jsxs)(n.p,{children:["And ",(0,i.jsx)(n.code,{children:"permissionSetConfig"})," is the permissions you defined previously. You can define this permission configuration inline like this if you want. But when inline policies are being used, it can be a bit unwieldy."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:' {\n        group: Group.SRE,\n        accounts: [\n            Account.BILLING_ACCOUNT,\n            Account.SANDBOX,\n            Account.PREPROD1,\n            Account.PROD1,\n            Account.AUDIT,\n            Account.LOG_ARCHIVE,\n        ],\n        permissionSetConfig: {\n            name: "SRE",\n            awsManagedPolicyNames: [ManagedPolicies.ADMINISTRATOR_ACCESS],\n        },\n    },\n'})}),"\n",(0,i.jsx)(n.h2,{id:"deploy-the-sso-stack",children:"Deploy the SSO Stack"}),"\n",(0,i.jsx)(n.p,{children:"Let's do a diff to see what's going on."}),"\n",(0,i.jsx)(n.admonition,{title:"action",type:"info",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cdk --profile baremetal.help diff BareMetalLandingZone\n"})})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"[+] AWS::SSO::PermissionSet SRE SRE \n[+] AWS::SSO::Assignment assignment_825617765789_90674777ee-7d026bff-6189-4057-8a8e-fc5e79c39742 assignment82561776578990674777ee7d026bff618940578a8efc5e79c39742 \n[+] AWS::SSO::Assignment assignment_772866064453_90674777ee-7d026bff-6189-4057-8a8e-fc5e79c39742 assignment77286606445390674777ee7d026bff618940578a8efc5e\n"})}),"\n",(0,i.jsxs)(n.p,{children:["We're creating some ",(0,i.jsx)(n.code,{children:"AWS::SSO::PermissionSet"})," resources for ",(0,i.jsx)(n.code,{children:"SRE"})," and the other groups. We're also assigning groups to accounts with ",(0,i.jsx)(n.code,{children:"AWS::SSO::Assignment"}),". Finally, we made some permission sets that define what users in that group can do."]}),"\n",(0,i.jsx)(n.h3,{id:"looks-good-deploy",children:"Looks good: deploy!"}),"\n",(0,i.jsx)(n.admonition,{title:"action",type:"info",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cdk --profile baremetal.help deploy BareMetalLandingZone\n"})})}),"\n",(0,i.jsx)(n.p,{children:"It should go something like this"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"\u276f cdk --profile baremetal.help deploy BareMetalLandingZone                                                                               \n\n\u2728  Synthesis time: 7.28s\n\nBareMetalLandingZone: deploying...\n[0%] start: Publishing e646c4690c632a01d0c1c953bb8daa64b7d389435a0d4df2a3e657b76915cc9e:825617765789-us-east-1\n[100%] success: Published e646c4690c632a01d0c1c953bb8daa64b7d389435a0d4df2a3e657b76915cc9e:825617765789-us-east-1\nBareMetalLandingZone: creating CloudFormation changeset...\n\n \u2705  BareMetalLandingZone\n\n\u2728  Deployment time: 103.19s\n\nStack ARN:\narn:aws:cloudformation:us-east-1:825617765789:stack/BareMetalLandingZone/e9d4adc0-b9a3-11ec-b82b-0e2cb68ae875\n\n\u2728  Total time: 110.47s\n"})}),"\n",(0,i.jsx)(n.h2,{id:"do-we-have-a-landing-zone",children:"Do We Have a Landing Zone?"}),"\n",(0,i.jsx)(n.p,{children:"Let's check."}),"\n",(0,i.jsx)(n.p,{children:"We should have some SSO Users."}),"\n",(0,i.jsxs)(n.admonition,{title:"action",type:"info",children:[(0,i.jsx)(n.p,{children:"Navigate to the AWS Single Sign-On console in AWS."}),(0,i.jsx)(n.p,{children:'Click "Users".'})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(2312).A+"",width:"2908",height:"2856"})}),"\n",(0,i.jsx)(n.p,{children:"Looks good."}),"\n",(0,i.jsx)(n.p,{children:"Now for Groups."}),"\n",(0,i.jsx)(n.admonition,{title:"action",type:"info",children:(0,i.jsx)(n.p,{children:'Still in the AWS SSO Console, click "Groups".'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(856).A+"",width:"2908",height:"2856"})}),"\n",(0,i.jsx)(n.admonition,{title:"action",type:"info",children:(0,i.jsx)(n.p,{children:'Still in the AWS SSO Console, click "Permission Sets".'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(7959).A+"",width:"2908",height:"2856"})}),"\n",(0,i.jsx)(n.p,{children:"Let's take a look at one of those Permission Sets."}),"\n",(0,i.jsx)(n.admonition,{title:"action",type:"info",children:(0,i.jsxs)(n.p,{children:["Click ",(0,i.jsx)(n.code,{children:"DEVELOPER"}),"."]})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(5318).A+"",width:"2908",height:"2856"})}),"\n",(0,i.jsxs)(n.p,{children:["We can see the AWS Managed Policy ",(0,i.jsx)(n.code,{children:"PowerUserAccess"})," has been assigned to the Permission Set. Now let's see which accounts this SSO Groups is available in."]}),"\n",(0,i.jsx)(n.admonition,{title:"action",type:"info",children:(0,i.jsxs)(n.p,{children:["Still in the ",(0,i.jsx)(n.code,{children:"DEVELOPER"}),' Permission Set detail page, click the "Accounts" tab.']})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(8641).A+"",width:"2908",height:"2856"})}),"\n",(0,i.jsxs)(n.p,{children:["We can see the ",(0,i.jsx)(n.code,{children:"DEVELOPER"})," Permission Set is available in the ",(0,i.jsx)(n.code,{children:"Sandbox"})," AWS Account."]}),"\n",(0,i.jsx)(n.p,{children:"Let's check the same thing from the AWS Accounts perspective."}),"\n",(0,i.jsx)(n.admonition,{title:"action",type:"info",children:(0,i.jsx)(n.p,{children:'Click "AWS accounts" in the AWS Single Sign-On console. Open the `Dev OU.'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(6767).A+"",width:"2908",height:"2856"})}),"\n",(0,i.jsxs)(n.p,{children:["We can see that the ",(0,i.jsx)(n.code,{children:"Sandbox"})," account has been assigned the Permission Sets ",(0,i.jsx)(n.code,{children:"DEVELOPER"})," and ",(0,i.jsx)(n.code,{children:"SRE"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"try-signing-in",children:"Try signing in"}),"\n",(0,i.jsx)(n.p,{children:"What would all this be if we didn't have a Landing Zone that let users log in and see their stuff?"}),"\n",(0,i.jsxs)(n.admonition,{title:"action",type:"info",children:[(0,i.jsx)(n.p,{children:'In the AWS SSO Console, click "Settings"'}),(0,i.jsx)(n.p,{children:'Copy the "User portal URL".'}),(0,i.jsx)(n.p,{children:"Open that URL, probably in an incognito window because we're going to try logging in as different users."}),(0,i.jsx)(n.p,{children:"Enter the log in credentials of one of our SSO Users."})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(4061).A+"",width:"2844",height:"2622"})}),"\n",(0,i.jsx)(n.p,{children:"This looks promising."}),"\n",(0,i.jsx)(n.admonition,{title:"action",type:"info",children:(0,i.jsx)(n.p,{children:'Click "Next", enter password, click "Sign in".'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(7238).A+"",width:"2844",height:"2622"})}),"\n",(0,i.jsx)(n.admonition,{title:"action",type:"info",children:(0,i.jsx)(n.p,{children:"Enter a new password."})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(58).A+"",width:"2844",height:"2622"})}),"\n",(0,i.jsx)(n.p,{children:"Here you have the option of enabling Multi-Factor Authentication. Let's do it."}),"\n",(0,i.jsxs)(n.admonition,{title:"action",type:"info",children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Highly recommended"}),', Click "Next".']}),(0,i.jsx)(n.p,{children:'Click "Skip for now" only if you\'re building a Landing Zone as a toy.'})]}),"\n",(0,i.jsxs)(n.admonition,{title:"action",type:"info",children:[(0,i.jsx)(n.p,{children:"Follow the MFA setup."}),(0,i.jsx)(n.p,{children:"Log in with user and new password."}),(0,i.jsx)(n.p,{children:'Click "AWS Account (6)" (or however many accounts you have).'})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(9356).A+"",width:"2950",height:"2754"})}),"\n",(0,i.jsx)(n.h2,{id:"using-the-landing-zone",children:"Using the Landing Zone"}),"\n",(0,i.jsx)(n.p,{children:"Logged in as a user, open each account in the list so you can see the Permission Sets available for that user in each account."}),"\n",(0,i.jsx)(n.p,{children:"In this case, we logged in as Annie Admin, and she has superpowers."}),"\n",(0,i.jsx)(n.admonition,{title:"action",type:"info",children:(0,i.jsx)(n.p,{children:"Click each account to show Permission Sets available."})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(8719).A+"",width:"2950",height:"2754"})}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsx)(n.p,{children:"Understand that this is not the exhaustive list of all Permission Sets, SSO Groups, and AWS Accounts."}),(0,i.jsx)(n.p,{children:"This is a list of accounts where the logged in user has at least one Permission Set. And those Permission Sets appear because the user is in the relevant group."}),(0,i.jsx)(n.p,{children:"Here's that again in pictures."}),(0,i.jsx)(n.mermaid,{value:'stateDiagram-v2\n   state "SSO Groups" as sso_groups\n   state "SSO Users" as sso_users\n   state "SSO Assignment" as sso_assignment\n   state "Permission Sets" as permission_sets\n   state "AWS Managed Policies" as aws_managed_policies\n   state "Inline Policies" as inline_policies\n   state "AWS Accounts" as accounts\n   state "AWS Organization" as organization\n   state "SSO Landing Zone" as landing_zone\n\n   sso_users --\x3e sso_groups : member of\n   sso_groups --\x3e sso_assignment : binds to\n   permission_sets --\x3e sso_assignment : binds to\n   aws_managed_policies --\x3e permission_sets : policy for\n   inline_policies --\x3e permission_sets : policy for\n   accounts --\x3e sso_assignment : binds to\n   organization --\x3e accounts : contains\n   sso_assignment --\x3e landing_zone\n   sso_assignment --\x3e landing_zone\n   sso_assignment --\x3e landing_zone\n   sso_assignment --\x3e landing_zone\n   sso_assignment --\x3e landing_zone'}),(0,i.jsx)(n.p,{children:"Think of SSO Assignments as a sparse matrix with group rows and account columns. Cells where they intersect mean that the group is valid in the account. Permission Sets provide policies for the group in the account."})]}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsx)(n.p,{children:"It's really good practice to make groups mean the same thing on each account they're assigned to. This means the Permission Set is always the same for any given group."})}),"\n",(0,i.jsx)(n.h2,{id:"using-roles-and-permissions",children:"Using Roles and Permissions"}),"\n",(0,i.jsx)(n.admonition,{title:"action",type:"info",children:(0,i.jsxs)(n.p,{children:['Click "Management console" next to ',(0,i.jsx)(n.code,{children:"SRE"})," in any account. This Permission Set has admin  rights."]})}),"\n",(0,i.jsx)(n.p,{children:"As admin, you should be able to do pretty much everything in an account. We'll start small and create an S3 bucket."}),"\n",(0,i.jsxs)(n.admonition,{title:"action",type:"info",children:[(0,i.jsx)(n.p,{children:'Navigate to the S3 console. Click "Services" in the top left next to the naughts and crosses.'}),(0,i.jsx)(n.p,{children:"Find S3 and bring up the console."})]}),"\n",(0,i.jsx)(n.p,{children:"There probably aren't any S3 buckets yet. Let's make one."}),"\n",(0,i.jsx)(n.admonition,{title:"action",type:"info",children:(0,i.jsx)(n.p,{children:'Click "Create bucket". Enter a unique name for the bucket and leave the defaults. Click "Create bucket".'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(7348).A+"",width:"2950",height:"2754"})}),"\n",(0,i.jsxs)(n.p,{children:["Go back to the Landing Zone, the list of accounts. For the same account, let's try another role, ",(0,i.jsx)(n.code,{children:"VIEW_ONLY"}),"."]}),"\n",(0,i.jsx)(n.admonition,{title:"action",type:"info",children:(0,i.jsxs)(n.p,{children:['Click the "Management console" link for ',(0,i.jsx)(n.code,{children:"VIEW_ONLY"}),"."]})}),"\n",(0,i.jsx)(n.p,{children:"You're still Annie, but you relinquished your superpowers. Let's confirm we no longer have what it takes to be admin."}),"\n",(0,i.jsxs)(n.admonition,{title:"action",type:"info",children:[(0,i.jsx)(n.p,{children:"Navigate to the S3 console. Your bucket's in the list."}),(0,i.jsx)(n.p,{children:'Select the bucket and click "Delete".'})]}),"\n",(0,i.jsx)(n.p,{children:"Bingo."}),"\n",(0,i.jsx)(n.p,{children:"So even though you created the bucket as Annie, once you're in a more restrictive role you can't delete it."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(2992).A+"",width:"2950",height:"2754"})}),"\n",(0,i.jsx)(n.h2,{id:"the-upshot",children:"The Upshot"}),"\n",(0,i.jsx)(n.p,{children:"We created an enterprise-grade landing zone."}),"\n",(0,i.jsx)(n.p,{children:"We tried logging in as a user with two different roles, and we saw that the permissions were different for each\nrole."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["[^1] Perhaps we could have used numbers here, but we're not sure how good AWS is at not starting account numbers with ",(0,i.jsx)(n.code,{children:"0"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8431:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/aws-console-group-id-3e54b2bba62461cf01fe997a9f79c0e3.png"},6752:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/aws-console-organizations-61ae99bc1a7bbf3ad9d07701891b2fc3.png"},7348:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/admin-creates-bucket-ok-f3959701cf118df563db0dba5c827964.png"},2992:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/cant-delete-bucket-as-view-only-561458d566f822738c6fde94ecbb3c95.png"},2860:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/copy-sso-arn-a4b1961a7f1513b90bcda968068a5f2e.png"},9356:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/landing-zone-first-look-fa36aaa6790b5df085b0f03034caf8b6.png"},8719:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/landing-zone-open-account-list-1ad09bc95cdd8445f5d1f3757b659063.png"},4061:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/microsoft-sso-login-8e29a49bb9ac7e1d854b6155c1cd2630.png"},8641:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/permission-set-account-detail-80ea1f0840f013d126a66e5669b2863f.png"},6767:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/permission-sets-for-accounts-36670b41819597f0efa6f68104a1d0b9.png"},856:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/sso-groups-list-d771672ee40abea6923b47750742c193.png"},5318:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/sso-permission-set-details-d6076fdf50bdf2db1ac4d6069644636b.png"},7959:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/sso-permission-sets-list-be4c298728ccd7c2de5e30646acae267.png"},58:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/sso-protect-account-78e488823e5831632768881ac8cf8870.png"},7238:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/sso-update-password-3b5655fcfe8bc18e023130a473871294.png"},2312:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/sso-users-list-09798499e14f4c88ac2b2a3e976a3c2a.png"},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>r});var i=s(6540);const t={},o=i.createContext(t);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);